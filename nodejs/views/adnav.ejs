<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welcome to Admins</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        @keyframes bellRing {
            0% { transform: rotate(0deg); }
            50% { transform: rotate(-10deg); }
            100% { transform: rotate(10deg); }
        }
        .ringing {
            animation: bellRing 0.5s infinite alternate;
        }
    </style>
</head>
<body>
  <nav class="bg-gray-800 p-4">
    <div class="container mx-auto flex justify-between items-center">
        <div class="text-white text-lg font-semibold">
            Notifications
        </div>
        <div class="relative">
            <button id="notification-button" class="text-gray-400 hover:text-white focus:outline-none relative" aria-label="Notifications">
                <svg id="bell-icon" class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11c0-3.38-2.03-6.307-5-7.742V3a2 2 0 00-4 0v.258C7.03 4.693 5 7.62 5 11v3.159c0 .538-.214 1.055-.595 1.438L3 17h5m7 0a3 3 0 01-6 0m6 0H9"></path>
                </svg>
                <span id="notification-badge" class="absolute top-0 right-0 block h-2 w-2 bg-red-600 rounded-full ring-2 ring-white hidden"></span>
                <span id="bell-message" class="bell-message"></span>
            </button>
            <div id="notification-dropdown" class="absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg py-2 z-50 hidden">
                <a href="http://localhost:3001/contactus" class="block px-4 py-2 text-gray-800 hover:bg-gray-100">Messages <span id="new-messages-count" class="ml-1"></span></a>
                <a href="#" class="block px-4 py-2 text-gray-800 hover:bg-gray-100">New Admissions</a>
                <a href="http://localhost:3001/logout" class="block px-4 py-2 text-gray-800 hover:bg-gray-100">LogOut</a>
            </div>
        </div>
    </div>
  </nav>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const notificationBadge = document.getElementById('notification-badge');
      const bellIcon = document.getElementById('bell-icon');
      const bellMessage = document.getElementById('bell-message');
      const newMessagesCount = document.getElementById('new-messages-count');
      let messageCount = 0;
      let isDropdownOpen = false;

      const socket = io('http://localhost:3001');

      socket.on('connect', () => {
        console.log('Socket connected successfully!');
      });

      socket.on('new-message', (message) => {
        console.log('New message received:', message);
        if (!isDropdownOpen) {
          notificationBadge.classList.remove('hidden');
          bellIcon.classList.add('ringing');
          messageCount++;
          newMessagesCount.textContent = `(${messageCount})`;
          bellMessage.textContent = message;
        } else {
          messageCount++;
          newMessagesCount.textContent = `(${messageCount})`;
        }
      });

      const notificationButton = document.getElementById('notification-button');
      const notificationDropdown = document.getElementById('notification-dropdown');

      notificationButton.addEventListener('click', (e) => {
        e.stopPropagation();
        notificationDropdown.classList.toggle('hidden');
        if (!notificationDropdown.classList.contains('hidden')) {
          bellIcon.classList.remove('ringing');
          messageCount = 0;
          newMessagesCount.textContent = '';
          notificationBadge.classList.add('hidden');
          isDropdownOpen = true;
        } else {
          isDropdownOpen = false;
        }
      });

      document.addEventListener('click', (e) => {
        if (!notificationButton.contains(e.target) && !notificationDropdown.contains(e.target)) {
          notificationDropdown.classList.add('hidden');
          isDropdownOpen = false;
        }
      });
    });
  </script>
  
</body>
</html>
